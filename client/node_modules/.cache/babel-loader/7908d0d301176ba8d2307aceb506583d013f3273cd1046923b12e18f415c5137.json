{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mindsphere\\\\JS\\\\MERN_Latest\\\\Hospital_Management_App\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport PersonIcon from '@mui/icons-material/Person';\nimport axios from 'axios';\nimport { Icon, TextField, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  const getAPI = async () => {\n    try {\n      const result = await axios.get('http://localhost:5000/');\n      console.log(\"Get API Result: \", result.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const loginPOST = async values => {\n    try {\n      console.log(\"Started with POST API\");\n      const response = await axios.post(\"http://localhost:5000/\", values);\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Error observer with loginPOST API\", error);\n    }\n  };\n  const onFinish = values => {\n    console.log('Success: ', values);\n    loginPOST(values);\n  };\n  const onFinishFailed = error => {\n    console.log('Failed: ', error);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: \"loginForm\",\n    elevation: \"20\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Paper","PersonIcon","axios","Icon","TextField","Typography","jsxDEV","_jsxDEV","LoginForm","getAPI","result","get","console","log","data","error","loginPOST","values","response","post","onFinish","onFinishFailed","className","elevation","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Mindsphere/JS/MERN_Latest/Hospital_Management_App/client/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport axios from 'axios';\r\nimport { Icon, TextField, Typography } from '@mui/material';\r\n\r\nconst LoginForm = () => {\r\n\r\n    const getAPI = async ()=>{\r\n        try{\r\n            const result = await axios.get('http://localhost:5000/');\r\n            console.log(\"Get API Result: \", result.data);            \r\n        }catch(error){\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const loginPOST = async (values)=>{\r\n        try{\r\n            console.log(\"Started with POST API\");\r\n            const response = await axios.post(\"http://localhost:5000/\", values);\r\n            console.log(response.data);\r\n        }catch(error){\r\n            console.error(\"Error observer with loginPOST API\", error);\r\n        }\r\n    }\r\n\r\n    const onFinish = (values)=>{\r\n        console.log('Success: ', values);\r\n        loginPOST(values);\r\n    }\r\n\r\n    const onFinishFailed = (error)=>{\r\n        console.log('Failed: ', error);\r\n    }\r\n\r\n   return(\r\n    <Paper className='loginForm' elevation='20'>\r\n        <Typography variant='h5'>Login</Typography>\r\n        <PersonIcon />\r\n        <TextField></TextField>\r\n    </Paper>\r\n   ) \r\n}\r\n\r\nexport default LoginForm;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEpB,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAU;IACrB,IAAG;MACC,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,wBAAwB,CAAC;MACxDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAACI,IAAI,CAAC;IAChD,CAAC,QAAMC,KAAK,EAAC;MACTH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAG;IAC9B,IAAG;MACCL,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,MAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,wBAAwB,EAAEF,MAAM,CAAC;MACnEL,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACJ,IAAI,CAAC;IAC9B,CAAC,QAAMC,KAAK,EAAC;MACTH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC7D;EACJ,CAAC;EAED,MAAMK,QAAQ,GAAIH,MAAM,IAAG;IACvBL,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,MAAM,CAAC;IAChCD,SAAS,CAACC,MAAM,CAAC;EACrB,CAAC;EAED,MAAMI,cAAc,GAAIN,KAAK,IAAG;IAC5BH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,KAAK,CAAC;EAClC,CAAC;EAEF,oBACCR,OAAA,CAACP,KAAK;IAACsB,SAAS,EAAC,WAAW;IAACC,SAAS,EAAC,IAAI;IAAAC,QAAA,gBACvCjB,OAAA,CAACF,UAAU;MAACoB,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3CtB,OAAA,CAACN,UAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdtB,OAAA,CAACH,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEZ,CAAC;AAAAC,EAAA,GArCKtB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}